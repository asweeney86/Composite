include Makefile.src Makefile.comp

IFNAME=$(lastword $(subst /, ,$(shell pwd)))
SUBDIRS=$(wildcard */)

CLIB=complib.o
IF_INCLUDE=$(foreach I,$(INTERFACES),-I$(INTERDIR)/$(I)/)
DEP_INC=$(foreach D,$(DEPENDENCIES),-I$(INTERDIR)/$(D)/)

OBJS=$(patsubst %.c,%.o,$(wildcard *.c)) $(patsubst %.S,%.o,$(wildcard *.S))
TMP_STR=tmp
INCLUDE=$(DEP_INC) -I../ -I./ $(IF_INCLUDE) $(CINC)

SOURCES=$(wildcard *.c)
#NOTE: assembly files don't have dependencies generated for them
SOURCE_DEPENDENCIES=$(SOURCES:%.c=%.d)

.PHONY: all
all: $(SOURCE_DEPENDENCIES) $(CLIB) subdirs

subdirs:
	$(Q)for dir in $(SUBDIRS) ; do \
		$(MAKE) -C $$dir ; \
	done

$(CLIB):$(OBJS)
ifneq ($(strip $(OBJS)),)
	$(E) $(LD_STR) $@
	$(Q) $(LD) -r -o $@ $^
endif

%.o:%.c
	$(E) $(CC_STR) $<: Compiling
	$(Q) $(CC) $(INCLUDE) $(CFLAGS) -o $@ -c $<

%.o:%.S
	$(E) $(AS_STR)  $<: Compiling
	$(Q) $(AS) $(INCLUDE) $(ASFLAGS) -c -o $@ $^

# see the make manual: create the .d dependencies from include
# statements.
%.d:%.c
	$(E) $(DEP_STR) Creating dependency file for $<
	$(Q) set -e; rm -f $@; \
	$(CC) -M $(INCLUDE) $(CFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

.PHONY: cp
cp:
	$(Q)for dir in $(SUBDIRS) ; do \
		$(MAKE) -C $$dir cp ; \
	done

#	$(info |     [RM]   Cleaning up implementation directory for interface $(IFNAME))
.PHONY: clean
clean:
	$(E) $(RM_STR) Cleaning $(IFNAME)
	$(Q) $(RM) -f a.out *.o *.a *.d *.d.* *~
	$(Q)for dir in $(SUBDIRS) ; do \
		$(MAKE) -C $$dir clean ; \
	done

fresh: clean all

-include $(SOURCE_DEPENDENCIES)

